---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: packagerevisions.porch.s3wong.io
spec:
  group: porch.s3wong.io
  names:
    kind: PackageRevision
    listKind: PackageRevisionList
    plural: packagerevisions
    singular: packagerevision
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PackageRevision is the Schema for the packagerevisions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PackageRevisionSpec defines the desired state of PackageRevision
            properties:
              lifecycle:
                type: string
              packageName:
                description: PackageName identifies the package in the repository.
                type: string
              parent:
                description: Parent references a package that provides resources to
                  us
                properties:
                  name:
                    description: Name is the name of the parent PackageRevision
                    type: string
                required:
                - name
                type: object
              readinessGates:
                items:
                  properties:
                    conditionType:
                      type: string
                  type: object
                type: array
              repository:
                description: RepositoryName is the name of the Repository object containing
                  this package.
                type: string
              revision:
                description: Revision identifies the version of the package.
                type: string
              tasks:
                description: "The task slice holds zero or more tasks that describe
                  the operations performed on the packagerevision. The are essentially
                  a replayable history of the packagerevision, \n Packagerevisions
                  that were not created in Porch may have an empty task list. \n Packagerevisions
                  created and managed through Porch will always have either an Init,
                  Edit, or a Clone task as the first entry in their task list. This
                  represent packagerevisions created from scratch, based a copy of
                  a different revision in the same package, or a packagerevision cloned
                  from another package. Each change to the packagerevision will result
                  in a correspondig task being added to the list of tasks. It will
                  describe the operation performed and will have a corresponding entry
                  (commit or layer) in git or oci. The task slice describes the history
                  of the packagerevision, so it is an append only list (We might introduce
                  some kind of compaction in the future to keep the number of tasks
                  at a reasonable number)."
                items:
                  properties:
                    clone:
                      properties:
                        strategy:
                          description: 'Defines which strategy should be used to update
                            the package. It defaults to ''resource-merge''. * resource-merge:
                            Perform a structural comparison of the original / updated
                            resources, and merge the changes into the local package.
                            * fast-forward: Fail without updating if the local package
                            was modified since it was fetched. * force-delete-replace:
                            Wipe all the local changes to the package and replace
                            it with the remote version.'
                          type: string
                        upstreamRef:
                          description: '`Upstream` is the reference to the upstream
                            package to clone.'
                          properties:
                            git:
                              description: Git upstream package specification. Required
                                if `type` is `git`. Must be unspecified if `type`
                                is not `git`.
                              properties:
                                directory:
                                  description: Directory within the Git repository
                                    where the packages are stored. A subdirectory
                                    of this directory containing a Kptfile is considered
                                    a package.
                                  type: string
                                ref:
                                  description: '`Ref` is the git ref containing the
                                    package. Ref can be a branch, tag, or commit SHA.'
                                  type: string
                                repo:
                                  description: 'Address of the Git repository, for
                                    example: `https://github.com/GoogleCloudPlatform/blueprints.git`'
                                  type: string
                                secretRef:
                                  description: Reference to secret containing authentication
                                    credentials. Optional.
                                  properties:
                                    name:
                                      description: Name of the secret. The secret
                                        is expected to be located in the same namespace
                                        as the resource containing the reference.
                                      type: string
                                  required:
                                  - name
                                  type: object
                              required:
                              - directory
                              - ref
                              - repo
                              type: object
                            oci:
                              description: OCI upstream package specification. Required
                                if `type` is `oci`. Must be unspecified if `type`
                                is not `oci`.
                              properties:
                                image:
                                  description: Image is the address of an OCI image.
                                  type: string
                              required:
                              - image
                              type: object
                            type:
                              description: Type of the repository (i.e. git, OCI).
                                If empty, `upstreamRef` will be used.
                              type: string
                            upstreamRef:
                              description: UpstreamRef is the reference to the package
                                from a registered repository rather than external
                                package.
                              properties:
                                name:
                                  description: '`Name` is the name of the referenced
                                    PackageRevision resource.'
                                  type: string
                              required:
                              - name
                              type: object
                          type: object
                      type: object
                    edit:
                      properties:
                        sourceRef:
                          description: PackageRevisionRef is a reference to a package
                            revision.
                          properties:
                            name:
                              description: '`Name` is the name of the referenced PackageRevision
                                resource.'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    eval:
                      properties:
                        config:
                          description: '`Config` specifies the function config, arbitrary
                            KRM resource. Mutually exclusive with ConfigMap.'
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        configMap:
                          additionalProperties:
                            type: string
                          description: '`FunctionRef` specifies the function by reference
                            to a Function resource. Mutually exclusive with `Image`.
                            FunctionRef *FunctionRef `json:"functionRef,omitempty"`
                            `ConfigMap` specifies the function config (https://kpt.dev/reference/cli/fn/eval/).
                            Mutually exclusive with Config.'
                          type: object
                        enableNetwork:
                          description: '`EnableNetwork` controls whether the function
                            has access to network. Defaults to `false`.'
                          type: boolean
                        image:
                          description: '`Image` specifies the function image, such
                            as `gcr.io/kpt-fn/gatekeeper:v0.2`. Use of `Image` is
                            mutually exclusive with `FunctionRef`.'
                          type: string
                        includeMetaResources:
                          description: If enabled, meta resources (i.e. `Kptfile`
                            and `functionConfig`) are included in the input to the
                            function. By default it is disabled.
                          type: boolean
                        match:
                          description: Match specifies the selection criteria for
                            the function evaluation. Corresponds to `kpt fn eval --match-???`
                            flgs (https://kpt.dev/reference/cli/fn/eval/).
                          properties:
                            apiVersion:
                              description: APIVersion of the target resources
                              type: string
                            kind:
                              description: Kind of the target resources
                              type: string
                            name:
                              description: Name of the target resources
                              type: string
                            namespace:
                              description: Namespace of the target resources
                              type: string
                          type: object
                        subpackage:
                          description: '`Subpackage` is a directory path to a subpackage
                            in which to evaluate the function.'
                          type: string
                      type: object
                    init:
                      description: PackageInitTaskSpec defines the package initialization
                        task.
                      properties:
                        description:
                          description: '`Description` is a short description of the
                            package.'
                          type: string
                        keywords:
                          description: '`Keywords` is a list of keywords describing
                            the package.'
                          items:
                            type: string
                          type: array
                        site:
                          description: '`Site is a link to page with information about
                            the package.'
                          type: string
                        subpackage:
                          description: '`Subpackage` is a directory path to a subpackage
                            to initialize. If unspecified, the main package will be
                            initialized.'
                          type: string
                      type: object
                    patch:
                      properties:
                        patches:
                          description: Patches is a list of individual patch operations.
                          items:
                            properties:
                              contents:
                                type: string
                              file:
                                type: string
                              patchType:
                                type: string
                            type: object
                          type: array
                      type: object
                    type:
                      type: string
                    update:
                      properties:
                        upstreamRef:
                          description: '`Upstream` is the reference to the upstream
                            package.'
                          properties:
                            git:
                              description: Git upstream package specification. Required
                                if `type` is `git`. Must be unspecified if `type`
                                is not `git`.
                              properties:
                                directory:
                                  description: Directory within the Git repository
                                    where the packages are stored. A subdirectory
                                    of this directory containing a Kptfile is considered
                                    a package.
                                  type: string
                                ref:
                                  description: '`Ref` is the git ref containing the
                                    package. Ref can be a branch, tag, or commit SHA.'
                                  type: string
                                repo:
                                  description: 'Address of the Git repository, for
                                    example: `https://github.com/GoogleCloudPlatform/blueprints.git`'
                                  type: string
                                secretRef:
                                  description: Reference to secret containing authentication
                                    credentials. Optional.
                                  properties:
                                    name:
                                      description: Name of the secret. The secret
                                        is expected to be located in the same namespace
                                        as the resource containing the reference.
                                      type: string
                                  required:
                                  - name
                                  type: object
                              required:
                              - directory
                              - ref
                              - repo
                              type: object
                            oci:
                              description: OCI upstream package specification. Required
                                if `type` is `oci`. Must be unspecified if `type`
                                is not `oci`.
                              properties:
                                image:
                                  description: Image is the address of an OCI image.
                                  type: string
                              required:
                              - image
                              type: object
                            type:
                              description: Type of the repository (i.e. git, OCI).
                                If empty, `upstreamRef` will be used.
                              type: string
                            upstreamRef:
                              description: UpstreamRef is the reference to the package
                                from a registered repository rather than external
                                package.
                              properties:
                                name:
                                  description: '`Name` is the name of the referenced
                                    PackageRevision resource.'
                                  type: string
                              required:
                              - name
                              type: object
                          type: object
                      type: object
                  required:
                  - type
                  type: object
                type: array
              workspaceName:
                description: WorkspaceName is a short, unique description of the changes
                  contained in this package revision.
                type: string
            type: object
          status:
            description: PackageRevisionStatus defines the observed state of PackageRevision
            properties:
              conditions:
                items:
                  properties:
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              deployment:
                description: Deployment is true if this is a deployment package (in
                  a deployment repository).
                type: boolean
              publishTimestamp:
                description: PublishedAt is the time when the packagerevision were
                  approved.
                format: date-time
                type: string
              publishedBy:
                description: PublishedBy is the identity of the user who approved
                  the packagerevision.
                type: string
              upstreamLock:
                description: UpstreamLock identifies the upstream data for this package.
                properties:
                  git:
                    description: Git is the resolved locator for a package on Git.
                    properties:
                      commit:
                        description: Commit is the SHA-1 for the last fetch of the
                          package. This is set by kpt for bookkeeping purposes.
                        type: string
                      directory:
                        description: Directory is the sub directory of the git repository
                          that was fetched. e.g. 'staging/cockroachdb'
                        type: string
                      ref:
                        description: Ref can be a Git branch, tag, or a commit SHA-1
                          that was fetched. e.g. 'master'
                        type: string
                      repo:
                        description: Repo is the git repository that was fetched.
                          e.g. 'https://github.com/kubernetes/examples.git'
                        type: string
                    type: object
                  type:
                    description: Type is the type of origin.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
